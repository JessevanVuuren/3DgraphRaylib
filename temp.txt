// Vector3 place = {pixel_points[i].key.r / (float)255, pixel_points[i].key.g / (float)255, pixel_points[i].key.b / (float)255};
// float rounded = roundf(place.x * 100) / 100;
// printf("%f - %f, %f, %f\n", place.x, rounded, place.y, place.z);



// for (int i = 0; i < LOP; i++) {
//     printf("R: %u, G: %u, B: %u\n", pixel_points[i].key.r, pixel_points[i].key.g, pixel_points[i].key.b);
// }
// PixelPoint *pixel_points = fill_hashmap(colors, &pixels_length);

       if (IsKeyDown(KEY_W)) {
            LOP = LOP * 2;
            if (LOP >= pixels_length) LOP = pixels_length;
            printf("%d\n", LOP);
        }
        if (IsKeyDown(KEY_S)) {
            LOP =  LOP / 2;
            if (LOP <= 0) LOP = 1;
        }

        PixelPoint *fill_hashmap(Color *colors, int *size) {
    PixelPoint *pp = NULL;
    int n = *size;

    for (int i = 0; i < n; i++) {
        int pixel = hmgeti(pp, colors[i]);
        if (pixel < 0) {
            PixelPoint point = {.key = colors[i]};
            hmputs(pp, point);
        }
    }

    *size = hmlen(pp);
    return pp;
}